[package]
name = "rs-matter-embassy"
version = "0.1.0"
authors = ["ivmarkov <ivan.markov@gmail.com>"]
edition = "2021"
resolver = "2"
categories = ["embedded", "hardware-support"]
keywords = ["matter", "embedded", "embassy"]
description = "Run rs-matter with embassy"
repository = "https://github.com/ivmarkov/rs-matter-embassy"
license = "MIT OR Apache-2.0"
readme = "README.md"
rust-version = "1.84"

[lib]
harness = false

#[patch.'https://github.com/ivmarkov/rs-matter-stack']
#rs-matter-stack = { path = "../../rs-matter-stack" }
#[patch.'https://github.com/embassy-rs/trouble']
#trouble-host = { version = "0.1", path = "../../../trouble/host" }
#[patch.'https://github.com/ivmarkov/esp-openthread']
#openthread = { version = "0.1", path = "../../esp-openthread/openthread" }

[patch.crates-io]
#rs-matter = { git = "https://github.com/project-chip/rs-matter" }
rs-matter = { git = "https://github.com/ivmarkov/rs-matter", branch = "next" }
nrf-sdc = { git = "https://github.com/alexmoon/nrf-sdc.git", rev = "551a95436e999b4290b4a33383aa3d6747b63dd9" }
nrf-mpsl = { git = "https://github.com/alexmoon/nrf-sdc.git", rev = "551a95436e999b4290b4a33383aa3d6747b63dd9" }

[profile.release]
opt-level = "s"

[profile.dev]
debug = true
opt-level = "z"

[features]
default = ["rs-matter-stack", "openthread"]
embassy-net = ["dep:embassy-net", "dep:edge-nal-embassy"]
esp = ["esp-wifi", "esp-hal", "openthread?/esp-ieee802154"]
rp = ["cyw43", "cyw43-pio", "embassy-rp", "rand_core"]
nrf = ["embassy-nrf", "rand_core", "nrf-sdc", "nrf-mpsl", "portable-atomic", "openthread?/embassy-nrf"]

[dependencies]
log = { version = "0.4", default-features = false }
heapless = "0.8"
embassy-futures = "0.1"
embassy-sync = "0.6"
embassy-time = "0.4"
embedded-io = "0.6"
scopeguard = { version = "1", default-features = false }
rs-matter = { version = "0.1", default-features = false, features = ["rustcrypto"] }
rs-matter-stack = { git = "https://github.com/ivmarkov/rs-matter-stack", branch = "master", default-features = false, optional = true, features = ["rustcrypto"] }
static_cell = "2"

embedded-storage-async = "0.4.1"
sequential-storage = "3"

embassy-net = { version = "0.6", optional = true, features = ["proto-ipv4", "proto-ipv6", "multicast", "dhcpv4"] }
edge-nal-embassy = { version = "0.5", optional = true }

#trouble-host = { version = "0.1", git = "https://github.com/embassy-rs/trouble" }
trouble-host = { git = "https://github.com/embassy-rs/trouble", branch = "main" }
bt-hci = "0.2"

# openthread = { version = "0.1", git = "https://github.com/ivmarkov/esp-openthread", optional = true, features = ["udp", "srp", "edge-nal"] }
openthread = { git = "https://github.com/ivmarkov/esp-openthread", branch = "main", optional = true, features = ["udp", "srp", "edge-nal"] }
hex-slice = "0.1"

# Only necessary when `rs-matter-embassy` is providing extra-sugar for the `esp32*` chips family
esp-wifi = { version = "0.12", optional = true, features = ["wifi", "ble"] }
esp-hal = { version = "0.23", optional = true, features = ["unstable"] }

# Only necessary when `rs-matter-embassy` is providing extra-sugar for the RPi Pico W MCU
cyw43 = { version = "0.3", optional = true, features = ["firmware-logs", "bluetooth"] }
cyw43-pio = { version = "0.3.0", optional = true }
embassy-rp = { version = "0.3.0", optional = true, features = ["unstable-pac", "rp2040"] }
rand_core = { version = "0.6.4", optional = true }

# Only necessary when `rs-matter-embassy` is providing extra-sugar for Nordic silicon
embassy-nrf = { version = "0.3.1", optional = true, features = ["log", "time-driver-rtc1", "time", "nrf52840"], default-features = false }
nrf-sdc = { version = "0.1.0", default-features = false, optional = true, features = ["peripheral", "nrf52840"] }
# TODO: PR upstream a re-export of the `critical-section-impl` feature by `nrf-sdc` and making it enabled by default
nrf-mpsl = { version = "0.1.0", default-features = false, optional = true, features = ["nrf52840", "critical-section-impl"] }
portable-atomic = { version = "1", optional = true }
